{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\nvar min = require( '@stdlib/math-base-special-min' );\n\n\n// MAIN //\n\n/**\n* Calculates the Levenshtein (edit) distance between two strings.\n*\n* @param {string} s1 - first string value\n* @param {string} s2 - second string value\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} second argument must be a string\n* @returns {NonNegativeInteger} Levenshtein distance\n*\n* @example\n* var distance = levenshteinDistance( 'algorithm', 'altruistic' );\n* // returns 6\n*/\nfunction levenshteinDistance( s1, s2 ) {\n\tvar temp;\n\tvar row;\n\tvar pre;\n\tvar m;\n\tvar n;\n\tvar i;\n\tvar j;\n\tvar k;\n\n\tif ( !isString( s1 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', s1 ) );\n\t}\n\tif ( !isString( s2 ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a string. Value: `%s`.', s2 ) );\n\t}\n\tn = s1.length;\n\tm = s2.length;\n\n\t// If either string is empty, the edit distance is equal to the number of characters in the non-empty string...\n\tif ( n === 0 ) {\n\t\treturn m;\n\t}\n\tif ( m === 0 ) {\n\t\treturn n;\n\t}\n\n\trow = [];\n\tfor ( i = 0; i <= m; i++ ) {\n\t\trow.push( i );\n\t}\n\n\tfor ( i = 0; i < n; i++ ) {\n\t\tpre = row[ 0 ];\n\t\trow[ 0 ] = i + 1;\n\t\tfor ( j = 0; j < m; j++ ) {\n\t\t\tk = j + 1;\n\t\t\ttemp = row[ k ];\n\t\t\tif ( s1[ i ] === s2[ j ] ) {\n\t\t\t\trow[ k ] = pre;\n\t\t\t} else {\n\t\t\t\trow[ k ] = min( pre, min( row[ j ], row[ k ] ) ) + 1;\n\t\t\t}\n\t\t\tpre = temp;\n\t\t}\n\t}\n\treturn row[ m ];\n}\n\n\n// EXPORTS //\n\nmodule.exports = levenshteinDistance;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Calculate the Levenshtein (edit) distance between two strings.\n*\n* @module @stdlib/string-base-distances-levenshtein\n*\n* @example\n* var levenshteinDistance = require( '@stdlib/string-base-distances-levenshtein' );\n*\n* var dist = levenshteinDistance( 'fly', 'ant' );\n* // returns 3\n*\n* dist = levenshteinDistance( 'frog', 'fog' );\n* // returns 1\n*\n* dist = levenshteinDistance( 'javascript', 'typescript' );\n* // returns 4\n*/\n\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAS,QAAS,uBAAwB,EAC1CC,EAAM,QAAS,+BAAgC,EAkBnD,SAASC,EAAqBC,EAAIC,EAAK,CACtC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACA,EACAC,EACAC,EAEJ,GAAK,CAACZ,EAAUI,CAAG,EAClB,MAAM,IAAI,UAAWH,EAAQ,kEAAmEG,CAAG,CAAE,EAEtG,GAAK,CAACJ,EAAUK,CAAG,EAClB,MAAM,IAAI,UAAWJ,EAAQ,mEAAoEI,CAAG,CAAE,EAMvG,GAJAK,EAAIN,EAAG,OACPK,EAAIJ,EAAG,OAGFK,IAAM,EACV,OAAOD,EAER,GAAKA,IAAM,EACV,OAAOC,EAIR,IADAH,EAAM,CAAC,EACD,EAAI,EAAG,GAAKE,EAAG,IACpBF,EAAI,KAAM,CAAE,EAGb,IAAM,EAAI,EAAG,EAAIG,EAAG,IAGnB,IAFAF,EAAMD,EAAK,CAAE,EACbA,EAAK,CAAE,EAAI,EAAI,EACTI,EAAI,EAAGA,EAAIF,EAAGE,IACnBC,EAAID,EAAI,EACRL,EAAOC,EAAKK,CAAE,EACTR,EAAI,CAAE,IAAMC,EAAIM,CAAE,EACtBJ,EAAKK,CAAE,EAAIJ,EAEXD,EAAKK,CAAE,EAAIV,EAAKM,EAAKN,EAAKK,EAAKI,CAAE,EAAGJ,EAAKK,CAAE,CAAE,CAAE,EAAI,EAEpDJ,EAAMF,EAGR,OAAOC,EAAKE,CAAE,CACf,CAKAV,EAAO,QAAUI,ICrDjB,IAAIU,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isString", "format", "min", "levenshteinDistance", "s1", "s2", "temp", "row", "pre", "m", "n", "j", "k", "main"]
}
